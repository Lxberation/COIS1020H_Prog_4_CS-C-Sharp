/*                                                                                                            
88                        88                                                                               
88                        88                                                 ,d     88                        
88                        88                                                 88                                   
88           8b,     ,d8  88,dPPYba,    ,adPPYba,  8b,dPPYba,  ,adPPYYba,  MM88MMM  88   ,adPPYba,   8b,dPPYba,   
88            `Y8, ,8P'   88P'    "8a  a8P_____88  88P'   "Y8  ""     `Y8    88     88  a8"     "8a  88P'   `"8a  
88              )888(     88       d8  8PP"""""""  88          ,adPPPPP88    88     88  8b       d8  88       88  
88            ,d8" "8b,   88b,   ,a8"  "8b,   ,aa  88          88,    ,88    88,    88  "8a,   ,a8"  88       88  
88888888888  8P'     `Y8  8Y"Ybbd8"'    `"Ybbd8"'  88          `"8bbdP"Y8    "Y888  88   `"YbbdP"'   88       88  
================================================================================================================
// Programmer: Daniel Rae Tiangco
// Project: Binary Search
// Date: 11/28/2023
// Description: Binary search is an algorithm used for finding the position of a target value within a ``SORTED ARRAY``
The basic idea behind binary search is to repeatedly divide the search range in half until the target value is found 
or the search range becomes empty.
================================================================================================================
 */

using System;

public class BinarySearch

{

    public static void Main(string[] args)

    {

        // Variables
        int[] array = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
        int target = 7;

        // Invoke
        int result = BinSearch(array, target);

        // Output
        if (result != -1)
        {

            Console.WriteLine("Element " + target + " is found at index " + result);

        }

        else

        {

            Console.WriteLine("Element " + target + " is not found in the array");

        }

    }

    public static int BinSearch(int[] array, int target)

    {

        int left = 0;
        int right = array.Length - 1;

        while (left <= right)

        {

            int mid = left + (right - left) / 2;

            if (array[mid] == target)

            {

                return mid;

            }

            else if (array[mid] < target)

            {

                left = mid + 1;

            }

            else

            {

                right = mid - 1;

            }

        }

        return -1;

    }

}