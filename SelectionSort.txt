/*                                                                                                            
88                        88                                                                               
88                        88                                                 ,d     88                        
88                        88                                                 88                                   
88           8b,     ,d8  88,dPPYba,    ,adPPYba,  8b,dPPYba,  ,adPPYYba,  MM88MMM  88   ,adPPYba,   8b,dPPYba,   
88            `Y8, ,8P'   88P'    "8a  a8P_____88  88P'   "Y8  ""     `Y8    88     88  a8"     "8a  88P'   `"8a  
88              )888(     88       d8  8PP"""""""  88          ,adPPPPP88    88     88  8b       d8  88       88  
88            ,d8" "8b,   88b,   ,a8"  "8b,   ,aa  88          88,    ,88    88,    88  "8a,   ,a8"  88       88  
88888888888  8P'     `Y8  8Y"Ybbd8"'    `"Ybbd8"'  88          `"8bbdP"Y8    "Y888  88   `"YbbdP"'   88       88  
================================================================================================================
// Programmer: Daniel Rae Tiangco
// Project: Selection Sort
// Date: 11/28/2023
// Description: Selection Sort is a simple sorting algorithm that works by repeatedly finding the minimum element 
from the unsorted part of the array and putting it at the beginning. The process is repeated for the remaining 
unsorted portion until the entire array is sorted.
================================================================================================================
 */

using System;

public class SelectionSort

{
    static void Main()

    {
        int[] array = { 64, 25, 12, 22, 11 };

        Console.WriteLine("Original array:");
        PrintArray(array);

        SelSort(array);

        Console.WriteLine("\nSorted array:");
        PrintArray(array);

    }

    public static void SelSort(int[] array)

    {

        for (int i = 0; i < array.Length - 1; i++)
        
        {

            int minIndex = i;

            for (int j = i + 1; j < array.Length; j++) 
            
            {

                if (array[j] < array[minIndex])

                {

                    minIndex = j;

                }

            }

            int temp = array[minIndex];
            array[minIndex] = array[i];
            array[i] = temp;    
        
        }

    }

    static void PrintArray(int[] arr)

    {

        foreach (var element in arr)

        {

            Console.Write($"{element} ");

        }

        Console.WriteLine();

    }

}